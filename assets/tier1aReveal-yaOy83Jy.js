import{o as H,g as d,r as p,d as m,u as j,a as C,c as $}from"./firebase-config-DqIMhm9h.js";/* empty css              */const s=document.getElementById("bios"),h=document.getElementById("continue-btn");let u;function c(e){return e.replace(new RegExp("(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F)","gu"),i=>`<span class="woobie-emoji">${i}</span>`)}async function y(e,i){try{const o=p(m,`matches/${u}/bios`),n=(await d(o)).val();if(!n||Object.keys(n).length<2){s.innerHTML="<p>Waiting for your match to submit their bio...</p>";const t=$(o,l=>{const a=l.val();a&&Object.keys(a).length>=2&&(t(),y(e,i))},l=>{console.error("Error listening to bios:",l),s.innerHTML='<p style="color:#ff6666;">Error waiting for match data. Please try refreshing.</p>'});return}const r=Object.keys(n).find(t=>t!==e);if(!r||!n[e]||!n[r]){s.innerHTML="<p>Error: Could not retrieve complete bio information for both users. Waiting for updates...</p>";const t=$(o,l=>{const a=l.val();a&&Object.keys(a).length>=2&&a[e]&&a[Object.keys(a).find(E=>E!==e)]&&(t(),y(e,i))});return}const[T,k,v]=await Promise.all([d(p(m,`matches/${u}/profiles/${e}`)),d(p(m,`matches/${u}/profiles/${r}`)),d(p(m,`matches/${u}/users`))]),b=T.val()||{},M=k.val()||{},w=v.val()||{},P=w[e]||i||"You",S=w[r]||"Your Match",f=t=>Array.isArray(t)&&t.length?`${t.map(l=>`<li>${l}</li>`).join("")}`:"<li><i>None listed</i></li>",D=c(n[r]),L=c(n[e]),x=c(S),B=c(P);s.innerHTML=`
          <div style="border:1px solid #33ff33; padding:1rem; margin-bottom:1rem;">
            <h2>${x}'s Bio:</h2>
            <p>${D}</p>
            <h4>🎯 Interests: 🎯</h4>
            <ul style="list-style: none; padding: 0; text-align: center;">${f(M.interests)}</ul>
            <h4>❌ Dealbreakers: ❌</h4>
            <ul style="list-style: none; padding: 0; text-align: center;">${f(M.dealbreakers)}</ul>
          </div>
          <div style="border:1px solid #999999; padding:1rem;">
            <h2>${B}'s Bio:</h2>
            <p>${L}</p>
            <h4>🎯 Interests: 🎯</h4>
            <ul style="list-style: none; padding: 0; text-align: center;">${f(b.interests)}</ul>
            <h4>❌ Dealbreakers: ❌</h4>
            <ul style="list-style: none; padding: 0; text-align: center;">${f(b.dealbreakers)}</ul>
          </div>
        `,h.style.display="block",setTimeout(()=>{document.querySelector("h1").innerHTML=c(document.querySelector("h1").textContent),h.innerHTML='<span class="woobie-emoji">→</span> Continue to Tier 1b',document.querySelectorAll("h4").forEach(t=>{t.innerHTML=c(t.textContent)})},100)}catch(o){console.error("Failed to load bios or profiles:",o),s.innerHTML='<p style="color:#ff6666;">Failed to load bio information. Please try again later.</p>'}}H(C,async e=>{if(!e){s.innerHTML="<p>Not logged in. Please reload or sign in again. Redirecting...</p>",h.style.display="none",setTimeout(()=>window.location.href="/auth/login.html",2e3);return}const i=e.uid;let o=localStorage.getItem("woobieUsername");if(u=localStorage.getItem("woobieMatchID"),!u){s.innerHTML='<p style="color:#ff6666;">Missing Match ID. Please restart the process.</p>',h.style.display="none",setTimeout(()=>window.location.href="/name-picker/index.html",2500);return}if(!o)try{const r=(await d(p(m,`users/${i}/currentMatch`))).val();if(r&&r.username)o=r.username,localStorage.setItem("woobieUsername",o);else{s.innerHTML='<p style="color:#ff6666;">Missing Woobie name. Please restart by picking a name.</p>',setTimeout(()=>window.location.href="/name-picker/index.html",2500);return}}catch(n){console.error("Error fetching Woobie name from profile:",n),s.innerHTML='<p style="color:#ff6666;">Could not retrieve session details. Please restart.</p>',setTimeout(()=>window.location.href="/name-picker/index.html",2500);return}await y(i,o);const g=p(m,`users/${i}/currentMatch`);await j(g,{stage:"tier1a-bios-revealed"})});h.onclick=async()=>{window.location.href="/tier1b/index.html"};
