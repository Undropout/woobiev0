import{s as M,a as g,o as C,r as h,d,c as b,e as D,b as y,u as x}from"./firebase-config-CQBF9bbN.js";/* empty css              */function w(t){return t.replace(new RegExp("(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F)","gu"),n=>`<span class="woobie-emoji">${n}</span>`)}document.addEventListener("DOMContentLoaded",()=>{const t=document.querySelector("h1");t.innerHTML=w(t.textContent);const n=document.getElementById("logout-button");n&&(n.innerHTML=w(n.textContent))});const r=document.getElementById("statusMessage"),c=document.getElementById("matchIdDisplay"),f=document.getElementById("logout-button");let o=null,u=null,a=null;function p(){if(u&&o){const t=h(d,`users/${o}/currentMatch`);D(t,"value",u),console.log("Detached userCurrentMatchListener for user:",o),u=null}}f&&(f.onclick=async()=>{p();const t=o;if(t)try{await y(h(d,`/queue/${t}`),null),console.log(`User ${t} removed from queue due to logout/cancel.`),await x(h(d,`users/${t}/currentMatch`),{stage:"name-picker",matchID:null}),console.log(`User ${t} currentMatch stage reset.`)}catch(n){console.error("Error removing user from queue or resetting stage on logout:",n)}try{await M(g),console.log("User signed out from waiting page.")}catch(n){console.warn("Firebase sign-out failed on waiting page:",n)}localStorage.clear(),sessionStorage.clear(),window.location.href="/auth/login.html"});C(g,t=>{if(t){if(o=t.uid,a=localStorage.getItem("woobieMatchID"),f&&(f.style.display="inline-block"),c&&(a?c.textContent=a:(c.textContent="ID not found from previous step.",console.warn("Initial potentialMatchID not found in localStorage on waiting page for user:",o))),!o){console.error("Critical error: User authenticated but UID is null on waiting page."),r&&(r.textContent="Authentication error. Please try logging in again."),setTimeout(()=>window.location.href="/auth/login.html",3e3);return}console.log(`Waiting page: User ${o} is logged in. Initial potential matchID from localStorage: ${a}`),r&&(r.textContent="Looking for a Woobie friend for you... Please wait.");const n=h(d,`users/${o}/currentMatch`);u&&(D(n,"value",u),u=null,console.log("Detached previous userCurrentMatchListener for user:",o)),u=b(n,async m=>{const s=m.val();if(s&&s.stage&&s.matchID){console.log("Waiting page: Update received on user's currentMatch node:",s);const e=s.stage,l=s.matchID;if(e==="bio"||e.startsWith("tier")||e==="chatroom"){console.log(`Match confirmed! Stage updated to '${e}'. Final Match ID: ${l}`),p();try{if(g.currentUser)await g.currentUser.getIdToken(!0),console.log("ID token refreshed, custom claims available for user:",o);else throw new Error("User session lost before token refresh on waiting page.")}catch(I){console.error("Error refreshing ID token for user:",o,I)}localStorage.setItem("woobieMatchID",l),c&&(c.textContent=`${l} (CONNECTED!)`),r&&(r.textContent=`We found someone! Proceeding to ${e}...`);let i="/bio/index.html";e==="bio"?i="/bio/index.html":e==="tier1a"?i="/tier1a/index.html":e==="tier1b"?i="/tier1b/index.html":e==="tier2"?i="/tier2/index.html":e==="tier2-complete"?i="/tier2/send.html":e==="tier2-reveal"?i="/tier2/reveal.html":e==="tier3"?i="/tier3/index.html":e==="chatroom"&&(i="/chat/index.html"),console.log(`Redirecting to: ${i}`),window.location.href=i}else e==="waiting_in_queue"?(console.log(`Still waiting. Current stage in DB: ${e}. Potential MatchID: ${l||a}`),c&&(l||a)&&(c.textContent=l||a)):console.log(`Current stage is '${e}'. Not yet 'bio' or later. MatchID: ${l||a}`)}else console.log("Waiting page: currentMatch data, or its stage/matchID, is missing for user:",o,"(Snapshot data: ",s,")"),r&&(r.textContent="Waiting for session details to be fully initialized by the system...")},m=>{console.error("Error listening to user's currentMatch node on waiting page:",m),r&&(r.textContent="Error connecting. Please check connection or try again.")}),window.addEventListener("beforeunload",p)}else console.log("Waiting page: User not logged in, redirecting to login."),r&&(r.textContent="Not logged in. Redirecting..."),setTimeout(()=>{window.location.href="/auth/login.html"},2e3)});
